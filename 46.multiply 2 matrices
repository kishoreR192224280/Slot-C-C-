#include <iostream>

int main() {
    int rows1, cols1, rows2, cols2;
    
   
    std::cout << "Enter the number of rows for matrix 1: ";
    std::cin >> rows1;
    std::cout << "Enter the number of columns for matrix 1: ";
    std::cin >> cols1;
    
   
    std::cout << "Enter the number of rows for matrix 2: ";
    std::cin >> rows2;
    std::cout << "Enter the number of columns for matrix 2: ";
    std::cin >> cols2;
    
   
    if (cols1 != rows2) {
        std::cout << "Matrix multiplication not possible. Number of columns in matrix 1 must equal number of rows in matrix 2.";
        return 0;
    }
    
   
    int **matrix1 = new int*[rows1];
    int **matrix2 = new int*[rows2];
    int **productMatrix = new int*[rows1];
    
    for (int i = 0; i < rows1; ++i) {
        matrix1[i] = new int[cols1];
        productMatrix[i] = new int[cols2];
    }
    
    for (int i = 0; i < rows2; ++i) {
        matrix2[i] = new int[cols2];
    }
    
   
    std::cout << "Enter values for matrix 1:\n";
    for (int i = 0; i < rows1; ++i) {
        for (int j = 0; j < cols1; ++j) {
            std::cin >> matrix1[i][j];
        }
    }
    
    std::cout << "Enter values for matrix 2:\n";
    for (int i = 0; i < rows2; ++i) {
        for (int j = 0; j < cols2; ++j) {
            std::cin >> matrix2[i][j];
        }
    }
    
   
    for (int i = 0; i < rows1; ++i) {
        for (int j = 0; j < cols2; ++j) {
            productMatrix[i][j] = 0;
            for (int k = 0; k < cols1; ++k) {
                productMatrix[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }
    
   
    std::cout << "Product matrix:\n";
    for (int i = 0; i < rows1; ++i) {
        for (int j = 0; j < cols2; ++j) {
            std::cout << productMatrix[i][j] << " ";
        }
        std::cout << std::endl;
    }
    
    
    for (int i = 0; i < rows1; ++i) {
        delete[] matrix1[i];
        delete[] productMatrix[i];
    }
    for (int i = 0; i < rows2; ++i) {
        delete[] matrix2[i];
    }
    delete[] matrix1;
    delete[] matrix2;
    delete[] productMatrix;
    
    return 0;
}
