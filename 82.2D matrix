#include <iostream>
using namespace std;

class Matrix {
private:
    int rows;
    int cols;
    int **data;

public:
    
    Matrix(int r, int c) : rows(r), cols(c) {
       
        data = new int*[rows];
        for (int i = 0; i < rows; ++i) {
            data[i] = new int[cols];
        }
    }

    ~Matrix() {
      
        for (int i = 0; i < rows; ++i) {
            delete[] data[i];
        }
        delete[] data;
    }
    void inputMatrix() {
        cout << "Enter elements of " << rows << "x" << cols << " matrix:" << endl;
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                cin >> data[i][j];
            }
        }
    }
    Matrix operator+(const Matrix& other) const {
        if (rows != other.rows || cols != other.cols) {
            cerr << "Error: Matrix dimensions do not match for addition." << endl;
            exit(1);
        }
        Matrix result(rows, cols);
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                result.data[i][j] = data[i][j] + other.data[i][j];
            }
        }
        return result;
    }

    Matrix operator-(const Matrix& other) const {
        if (rows != other.rows || cols != other.cols) {
            cerr << "Error: Matrix dimensions do not match for subtraction." << endl;
            exit(1);
        }
        Matrix result(rows, cols);
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                result.data[i][j] = data[i][j] - other.data[i][j];
            }
        }
        return result;
    }

    Matrix operator*(const Matrix& other) const {
        if (cols != other.rows) {
            cerr << "Error: Matrix dimensions do not match for multiplication." << endl;
            exit(1);
        }
        Matrix result(rows, other.cols);
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < other.cols; ++j) {
                result.data[i][j] = 0;
                for (int k = 0; k < cols; ++k) {
                    result.data[i][j] += data[i][k] * other.data[k][j];
                }
            }
        }
        return result;
    }

    void displayMatrix() const {
        cout << "Matrix:" << endl;
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                cout << data[i][j] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    int m, n;
    cout << "Enter number of rows and columns for Matrix A: ";
    cin >> m >> n;

    Matrix A(m, n);
    A.inputMatrix();

    cout << "Enter number of rows and columns for Matrix B: ";
    cin >> m >> n;

    Matrix B(m, n);
    B.inputMatrix();

   
    Matrix sum = A + B;
    cout << "Matrix A + B:" << endl;
    sum.displayMatrix();

    Matrix diff = A - B;
    cout << "Matrix A - B:" << endl;
    diff.displayMatrix();

    Matrix prod = A * B;
    cout << "Matrix A * B:" << endl;
    prod.displayMatrix();

    return 0;
}
